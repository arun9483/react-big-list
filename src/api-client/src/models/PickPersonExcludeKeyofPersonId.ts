/* tslint:disable */
/* eslint-disable */
/**
 * people-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Title } from './Title';
import {
    TitleFromJSON,
    TitleFromJSONTyped,
    TitleToJSON,
} from './Title';

/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickPersonExcludeKeyofPersonId
 */
export interface PickPersonExcludeKeyofPersonId {
    /**
     * 
     * @type {string}
     * @memberof PickPersonExcludeKeyofPersonId
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof PickPersonExcludeKeyofPersonId
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof PickPersonExcludeKeyofPersonId
     */
    email: string;
    /**
     * 
     * @type {Title}
     * @memberof PickPersonExcludeKeyofPersonId
     */
    title: Title;
    /**
     * 
     * @type {string}
     * @memberof PickPersonExcludeKeyofPersonId
     */
    countryCode: string;
}

/**
 * Check if a given object implements the PickPersonExcludeKeyofPersonId interface.
 */
export function instanceOfPickPersonExcludeKeyofPersonId(value: object): value is PickPersonExcludeKeyofPersonId {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('countryCode' in value) || value['countryCode'] === undefined) return false;
    return true;
}

export function PickPersonExcludeKeyofPersonIdFromJSON(json: any): PickPersonExcludeKeyofPersonId {
    return PickPersonExcludeKeyofPersonIdFromJSONTyped(json, false);
}

export function PickPersonExcludeKeyofPersonIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickPersonExcludeKeyofPersonId {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'email': json['email'],
        'title': TitleFromJSON(json['title']),
        'countryCode': json['countryCode'],
    };
}

export function PickPersonExcludeKeyofPersonIdToJSON(value?: PickPersonExcludeKeyofPersonId | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'title': TitleToJSON(value['title']),
        'countryCode': value['countryCode'],
    };
}

